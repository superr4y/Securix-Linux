#!/bin/bash

#: info: Securix GNU/Linux update script
#: desc: This script is checking/installing newer release of Securix
#: file: /usr/sbin/securix-update
#: author: Martin Cmelik (cm3l1k1) - securix.org, security-portal.cz
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

##############################################################################
#
# FUNCTIONS
#
##############################################################################

# load securix functions
if [ ! -r "/usr/sbin/securix-functions" ]; then
    echo "--- PROBLEM: /usr/sbin/securix-functions doesnt exist!!"
    logger "CRITICAL: /usr/sbin/securix-functions doesnt exist!!"
    exit 1
else
    . /usr/sbin/securix-functions
fi

##############################################################################
#
# Basic steps
#
##############################################################################

# check permissions
if [ "${EUID}" -ne "0" ]; then
    f_msg error "This script must be run as root or via sudo"
    exit_on_error
fi

##############################################################################
#
# MAIN
#
##############################################################################

# change context
f_mktemp
cd "${TEMPDIR}"

f_msg info "###-### Checking Securix update ---"
f_download "${SECURIXUPDATE}/cgi-bin/current.py?sxver=${SECURIXVERSION}\&sxid=${SECURIXID}" "${SECURIXUPDATEDR}/cgi-bin/current.py?sxver=${SECURIXVERSION}\&sxid=${SECURIXID}"
if [ "${?}" -ne "0" ]; then
    f_msg error "--- Problem when trying contact Securix update server"
    echo "--- Problem when trying contact Securix update server" >> "${SECURIXLOG}"
    exit_on_error
fi

LASTVERSION="$(<current.py)"
if [ "${LASTVERSION}" -ne "${LASTVERSION}" 2>/dev/null ]; then
    echo "LASTVERSION is not integer, value: ${DISKSIZE}"
    exit_on_error
fi

if [ "${SECURIXVERSION}" -eq "${LASTVERSION}" ]; then
    f_msg info "--- No updates available/needed"
    exit_on_error
else
    f_msg info "--- Updates available. Current version: ${SECURIX VERSION} New version: ${LASTVERSION}"
    f_msg info "###-### Downloading Securix scripts ---"
    f_download "${SECURIXUPDATE}/releases/${LASTVERSION}/${LASTVERSION}.tar.gz" "${SECURIXUPDATEDR}/releases/${LASTVERSION}/${LASTVERSION}.tar.gz"
    f_download "${SECURIXUPDATE}/releases/${LASTVERSION}/${LASTVERSION}.tar.gz.sign" "${SECURIXUPDATEDR}/releases/${LASTVERSION}/${LASTVERSION}.tar.gz.sign"
    openssl dgst -sha512 -verify /usr/share/securix/securix-codesign.pub -signature "${LASTVERSION}.tar.gz.sign" "${LASTVERSION}.tar.gz"
    if [ "${?}" -ne "0" ]; then
        f_msg error "--- Problem with Securix update signature! Possible security incident or network issue"
        exit_on_error
    else
        f_msg info "--- Signature verification is OK"
    fi
    tar xzf "${LASTVERSION}.tar.gz" -C "${TEMPDIR}"
    # pre-installation
    f_msg info "###-### Pre-installation steps ---"
    . "${TEMPDIR}/${LASTVERSION}/install/pre-install.sh"
    # installation
    f_msg info "###-### Installing new Securix version ---"
    . "${TEMPDIR}/${LASTVERSION}/install/run-install.sh"
    # post-installation
    f_msg info "###-### Post-installation steps ---"
    . "${TEMPDIR}/${LASTVERSION}/install/post-install.sh"
    # update SECURIXVERSION
    sed -i "/SECURIXVERSION=/ c SECURIXVERSION=\"${LASTVERSION}\"" /usr/sbin/securix-functions
    sed -i "/SECURIXVERSION=/ c SECURIXVERSION=\"${LASTVERSION}\"" /etc/securix-release
    # done
    f_msg info "###-### Installation of release ${LASTVERSION} has been completed! ---"
    logger "${0} - Securix has been updated to version ${LASTVERSION}"
    echo "=== ${0} - Securix has been updated to version ${LASTVERSION}" >> "${SECURIXLOG}"
    rm -f "${SECURIXVAR}/securix.update"
fi

f_msg info "###-### Checking another update sequence ---"
/usr/sbin/securix-update

# End
cd "${HOME}"
rm -rf "${TEMPDIR}"

exit
